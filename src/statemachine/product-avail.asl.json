{
  "Comment": "Check Apple product availability",
  "StartAt": "Get product availability from storage",
  "States": {
    "Get product availability from storage": {
      "Type": "Task",
      "Resource": "${DDBGetItem}",
      "Parameters": {
        "TableName": "${DDBProductAvail}",
        "Key": {
          "url": {
            "S.$": "$.url"
          }
        }
      },
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed"],
          "IntervalSeconds": 2,
          "MaxAttempts": 3,
          "BackoffRate": 1
        }
      ],
      "ResultPath": "$.TaskResult",
      "Next": "Was product available?"
    },
    "Was product available?": {
      "Type": "Choice",
      "Choices": [
        {
          "And": [
            {
              "Variable": "$.TaskResult.Item",
              "IsPresent": true
            },
            {
              "Variable": "$.TaskResult.Item.state.N",
              "StringEquals": "1"
            }
          ],
          "Next": "End state"
        }
      ],
      "Default": "Check product avail"
    },
    "Check product avail": {
      "Type": "Task",
      "Resource": "${ProductAvailCheckerFunctionArn}",
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed"],
          "IntervalSeconds": 2,
          "MaxAttempts": 3,
          "BackoffRate": 1
        }
      ],
      "ResultPath": "$.TaskResult",
      "Next": "Choice"
    },
    "Choice": {
      "Type": "Choice",
      "Choices": [
        {
          "Variable": "$.TaskResult.isAvailable",
          "BooleanEquals": true,
          "Next": "Store product avail"
        }
      ],
      "Default": "Wait"
    },
    "Wait": {
      "Type": "Wait",
      "Seconds": 60,
      "Next": "Check product avail"
    },
    "Store product avail": {
      "Type": "Task",
      "Resource": "${DDBPutItem}",
      "InputPath": "$.TaskResult",
      "ResultPath": "$.TaskResult",
      "Parameters": {
        "TableName": "${DDBProductAvail}",
        "Item": {
          "url": {
            "S.$": "$.url"
          },
          "state": {
            "N": "1"
          }
        }
      },
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed"],
          "IntervalSeconds": 20,
          "MaxAttempts": 5,
          "BackoffRate": 10
        }
      ],
      "Next": "Publish message to Discord"
    },
    "Publish message to Discord": {
      "Type": "Task",
      "Resource": "${DiscordPublisherFunctionArn}",
      "Parameters": {
        "content.$": "States.Format('@everyone\n\n**[PRODUCT LAUNCH]**\n✨{}✨ {} available for purchase now!\nMake your visit at {}', $.product_name, $.is_OR_are, $.url)"
      },
      "Retry": [
        {
          "ErrorEquals": ["States.TaskFailed"],
          "IntervalSeconds": 2,
          "MaxAttempts": 3,
          "BackoffRate": 1
        }
      ],
      "End": true
    },
    "End state": {
      "Type": "Succeed"
    }
  }
}
